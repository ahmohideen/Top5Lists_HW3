{"ast":null,"code":"var _jsxFileName = \"/Users/hanamohideen/Desktop/Top5Lists_HW3/client/src/components/Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store';\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [draggedTo, setDraggedTo] = useState(0);\n  const [toggle, setToggle] = useState(true); //let toggle = true;\n\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"item\", event.target.id);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    setDraggedTo(false);\n  }\n\n  function handleDrop(event) {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  }\n\n  function toggleEdit(e) {\n    setToggle(!toggle);\n    console.log(\"edit button pressed\");\n    console.log(toggle);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      handleBlur(event);\n    }\n  }\n\n  function handleBlur(event) {\n    console.log(\"within blur\");\n    setToggle(!toggle);\n  }\n\n  function handleUpdate(event) {}\n\n  let {\n    index\n  } = props;\n  let itemClass = \"top5-item\";\n\n  if (draggedTo) {\n    itemClass = \"top5-item-dragged-to\";\n  }\n\n  if (toggle) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'item-' + (index + 1),\n      className: itemClass,\n      onDragStart: handleDragStart,\n      onDragOver: handleDragOver,\n      onDragEnter: handleDragEnter,\n      onDragLeave: handleDragLeave,\n      onDrop: handleDrop,\n      draggable: \"true\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: toggleEdit,\n        type: \"button\",\n        id: \"edit-item-\" + index + 1,\n        className: \"list-card-button\",\n        value: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), props.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      id: 'list-text-' + (index + 1),\n      class: \"top5-item\",\n      type: \"text\",\n      onKeyPress: handleKeyPress,\n      onBlur: handleBlur,\n      onChange: handleUpdate,\n      defaultValue: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Top5Item, \"hOHTbuT7BN6WC6S8sSYQ+we/Kxg=\");\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["/Users/hanamohideen/Desktop/Top5Lists_HW3/client/src/components/Top5Item.js"],"names":["React","useContext","useState","GlobalStoreContext","Top5Item","props","store","draggedTo","setDraggedTo","toggle","setToggle","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDragEnter","handleDragLeave","handleDrop","targetId","substring","indexOf","sourceId","getData","addMoveItemTransaction","toggleEdit","e","console","log","handleKeyPress","code","handleBlur","handleUpdate","index","itemClass","text"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store'\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\nfunction Top5Item(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const [draggedTo, setDraggedTo] = useState(0);\n    const [toggle, setToggle] = useState(true)\n    //let toggle = true;\n\n    function handleDragStart(event) {\n        event.dataTransfer.setData(\"item\", event.target.id);\n    }\n\n    function handleDragOver(event) {\n        event.preventDefault();\n    }\n\n    function handleDragEnter(event) {\n        event.preventDefault();\n        setDraggedTo(true);\n    }\n\n    function handleDragLeave(event) {\n        event.preventDefault();\n        setDraggedTo(false);\n    }\n\n    function handleDrop(event) {\n        event.preventDefault();\n        let target = event.target;\n        let targetId = target.id;\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n        let sourceId = event.dataTransfer.getData(\"item\");\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n        setDraggedTo(false);\n\n        // UPDATE THE LIST\n        store.addMoveItemTransaction(sourceId, targetId);\n    }\n\n    function toggleEdit(e) {\n        setToggle(!toggle);\n        console.log(\"edit button pressed\");\n        console.log(toggle);\n    }\n\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\") {\n            handleBlur(event);\n        }\n    }\n\n    function handleBlur(event) {\n        console.log(\"within blur\");\n        setToggle(!toggle);\n    }\n\n    function handleUpdate(event) {\n\n    }\n\n    let { index } = props;\n    let itemClass = \"top5-item\";\n    if (draggedTo) {\n        itemClass = \"top5-item-dragged-to\";\n    }\n    if (toggle){\n    return (\n            <div\n                id={'item-' + (index + 1)}\n                className={itemClass}\n                onDragStart={handleDragStart}\n                onDragOver={handleDragOver}\n                onDragEnter={handleDragEnter}\n                onDragLeave={handleDragLeave}\n                onDrop={handleDrop}\n                draggable=\"true\"\n            >\n                <input\n                    onClick={toggleEdit}\n                    type=\"button\"\n                    id={\"edit-item-\" + index + 1}\n                    className=\"list-card-button\"\n                    value={\"\\u270E\"}\n                />\n                {props.text}\n            </div>)\n    }\n    else {\n        return(\n            <input\n                id={'list-text-' + (index + 1)}\n                class=\"top5-item\"\n                type='text'\n                onKeyPress={handleKeyPress}\n                onBlur={handleBlur}\n                onChange={handleUpdate}\n                defaultValue={props.text}\n            /> \n        )\n    }    \n}\n\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}