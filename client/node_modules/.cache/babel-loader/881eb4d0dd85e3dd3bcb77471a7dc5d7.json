{"ast":null,"code":"var _jsxFileName = \"/Users/hanamohideen/Desktop/Top5Lists_HW3/client/src/components/Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store';\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [draggedTo, setDraggedTo] = useState(0);\n  let toggle = false;\n\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"item\", event.target.id);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    setDraggedTo(false);\n  }\n\n  function handleDrop(event) {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  }\n\n  function toggleEdit(e) {\n    console.log(\"edit button pressed\");\n    toggle = !toggle;\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      this.handleBlur(event);\n    }\n  }\n\n  function handleBlur(event) {\n    toggle = !toggle;\n  }\n\n  function handleUpdate(event) {}\n\n  let {\n    index\n  } = props;\n  let itemClass = \"top5-item\";\n\n  if (draggedTo) {\n    itemClass = \"top5-item-dragged-to\";\n  }\n\n  let top5Item = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'item-' + (index + 1),\n    className: itemClass,\n    onClick: toggleEdit,\n    onDragStart: handleDragStart,\n    onDragOver: handleDragOver,\n    onDragEnter: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    draggable: \"true\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"edit-item-\" + index + 1,\n      className: \"list-card-button\",\n      value: \"\\u270E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), props.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 20\n  }, this);\n\n  if (toggle) {\n    top5Item = /*#__PURE__*/_jsxDEV(\"input\", {\n      id: 'list-text-' + (index + 1),\n      class: \"top5-item\",\n      type: \"text\",\n      onKeyPress: handleKeyPress,\n      onBlur: handleBlur,\n      onChange: handleUpdate,\n      defaultValue: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 20\n    }, this);\n  }\n\n  return top5Item;\n}\n\n_s(Top5Item, \"HLZXCl0yEtBjUwNOHlALkqUthp4=\");\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["/Users/hanamohideen/Desktop/Top5Lists_HW3/client/src/components/Top5Item.js"],"names":["React","useContext","useState","GlobalStoreContext","Top5Item","props","store","draggedTo","setDraggedTo","toggle","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDragEnter","handleDragLeave","handleDrop","targetId","substring","indexOf","sourceId","getData","addMoveItemTransaction","toggleEdit","e","console","log","handleKeyPress","code","handleBlur","handleUpdate","index","itemClass","top5Item","text"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store'\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\nfunction Top5Item(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const [draggedTo, setDraggedTo] = useState(0);\n    let toggle = false;\n\n    function handleDragStart(event) {\n        event.dataTransfer.setData(\"item\", event.target.id);\n    }\n\n    function handleDragOver(event) {\n        event.preventDefault();\n    }\n\n    function handleDragEnter(event) {\n        event.preventDefault();\n        setDraggedTo(true);\n    }\n\n    function handleDragLeave(event) {\n        event.preventDefault();\n        setDraggedTo(false);\n    }\n\n    function handleDrop(event) {\n        event.preventDefault();\n        let target = event.target;\n        let targetId = target.id;\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n        let sourceId = event.dataTransfer.getData(\"item\");\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n        setDraggedTo(false);\n\n        // UPDATE THE LIST\n        store.addMoveItemTransaction(sourceId, targetId);\n    }\n\n    function toggleEdit(e) {\n        console.log(\"edit button pressed\");\n        toggle = !toggle;\n    }\n\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\") {\n            this.handleBlur(event);\n        }\n    }\n\n    function handleBlur(event) {\n        toggle = !toggle;\n    }\n\n    function handleUpdate(event) {\n\n    }\n\n    let { index } = props;\n    let itemClass = \"top5-item\";\n    if (draggedTo) {\n        itemClass = \"top5-item-dragged-to\";\n    }\n\n    let top5Item = <div\n        id={'item-' + (index + 1)}\n        className={itemClass}\n        onClick={toggleEdit}\n        onDragStart={handleDragStart}\n        onDragOver={handleDragOver}\n        onDragEnter={handleDragEnter}\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}\n        draggable=\"true\"\n        >\n        <input\n            type=\"button\"\n            id={\"edit-item-\" + index + 1}\n            className=\"list-card-button\"\n            value={\"\\u270E\"}\n        />\n        {props.text}\n    </div>;\n\n    if(toggle) {\n        top5Item = <input\n            id={'list-text-' + (index + 1)}\n            class=\"top5-item\"\n            type='text'\n            onKeyPress={handleKeyPress}\n            onBlur={handleBlur}\n            onChange={handleUpdate}\n            defaultValue={props.text}\n        />;\n    }\n\n    return (\n        top5Item\n    )\n    \n      \n}\n\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}